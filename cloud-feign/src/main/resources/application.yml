server:
  port: 8099
spring:
  application:
    name: cloud-feign
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${vcap.application.instance-id:${spring.application.instance-id:${random.value}}}
  client:
    service-url:
      defaultZone: http://root:123456@localhost:8761/eureka/
logging:
  level:
    com.miracle.cloud.feign.FeignProductClient: debug
# 配置feign熔断器，避免首次请求时间超过1秒发生超时异常
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000

# To disable Hystrix in Feign: 禁用Feign内置熔断器
feign:
  hystrix:
    enabled: true

# To set thread isolation to SEMAPHORE： 设置线程隔离级别，后续研究
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: Thread

# 禁用单个FeignClient的Hystrix支持
# 请参考：FeignEurekaConfiguration



# Feign使用的注意事项
# 1. 不能使用方法级别的组合注解，如GetMapping， PostNapping 只能使用RequestingMapping
# 2. 路径上的Pathvariable参数一定要指定value，否则会报错，找不到指定的参数
# 3. 不嫩将自定义的configuration包防止在启动类的字目录下，否则，如同Ribbon，所有的feignClient都会使用同一组encode， decode， contract

# Spring Cloud Netflix 默认情况下不提供以下bean，但是仍然从应用程序上下文中查找这些类型的bean以创建假客户机：
# Logger.Level
# Retryer
# ErrorDecoder
# Request.Options
# Collection<RequestInterceptor>
# SetterFactory

# 以下为spring cloud的自动加载配置
# Spring Cloud Netflix默认为feign（BeanType beanName：ClassName）提供以下bean：
# Decoder feignDecoder：ResponseEntityDecoder（其中包含SpringDecoder）
# Encoder feignEncoder：SpringEncoder
# Logger feignLogger：Slf4jLogger
# Contract feignContract：SpringMvcContract
# Feign.Builder feignBuilder：HystrixFeign.Builder
# Client feignClient：如果Ribbon启用，则为LoadBalancerFeignClient，否则将使用默认的feign客户端。
# 可以通过将feign.okhttp.enabled或feign.httpclient.enabled设置为true，并将它们放在类路径上来使用OkHttpClient和ApacheHttpClient feign客户端。

# 与Ribbon相同，配置类Configuration应当避免与SpringBoot启动类放在同一个包下，避免被Spring扫描到
# FeignClient的接口中，不能使用GetMapping等组合注解
# 使用@PathVariable注解时，应当指定其参数
# Feign暂不支持复杂对象作为参数